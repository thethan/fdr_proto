// Code generated by protoc-gen-go. DO NOT EDIT.
// source: draft_results.proto

// The package name determines the name of the directories that truss creates
// for `package echo;` truss will create the directory "echo-service".

package fdr_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DraftPlayerRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=player_id,proto3" json:"player_id,omitempty"`
	DraftId              int32    `protobuf:"varint,2,opt,name=draft_id,proto3" json:"draft_id,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DraftPlayerRequest) Reset()         { *m = DraftPlayerRequest{} }
func (m *DraftPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*DraftPlayerRequest) ProtoMessage()    {}
func (*DraftPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_446ed4cf1b75512d, []int{0}
}

func (m *DraftPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DraftPlayerRequest.Unmarshal(m, b)
}
func (m *DraftPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DraftPlayerRequest.Marshal(b, m, deterministic)
}
func (m *DraftPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DraftPlayerRequest.Merge(m, src)
}
func (m *DraftPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_DraftPlayerRequest.Size(m)
}
func (m *DraftPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DraftPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DraftPlayerRequest proto.InternalMessageInfo

func (m *DraftPlayerRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *DraftPlayerRequest) GetDraftId() int32 {
	if m != nil {
		return m.DraftId
	}
	return 0
}

func (m *DraftPlayerRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type DraftPlayerResponse struct {
	Player               *Player  `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DraftPlayerResponse) Reset()         { *m = DraftPlayerResponse{} }
func (m *DraftPlayerResponse) String() string { return proto.CompactTextString(m) }
func (*DraftPlayerResponse) ProtoMessage()    {}
func (*DraftPlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_446ed4cf1b75512d, []int{1}
}

func (m *DraftPlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DraftPlayerResponse.Unmarshal(m, b)
}
func (m *DraftPlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DraftPlayerResponse.Marshal(b, m, deterministic)
}
func (m *DraftPlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DraftPlayerResponse.Merge(m, src)
}
func (m *DraftPlayerResponse) XXX_Size() int {
	return xxx_messageInfo_DraftPlayerResponse.Size(m)
}
func (m *DraftPlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DraftPlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DraftPlayerResponse proto.InternalMessageInfo

func (m *DraftPlayerResponse) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func init() {
	proto.RegisterType((*DraftPlayerRequest)(nil), "fdr.DraftPlayerRequest")
	proto.RegisterType((*DraftPlayerResponse)(nil), "fdr.DraftPlayerResponse")
}

func init() {
	proto.RegisterFile("draft_results.proto", fileDescriptor_446ed4cf1b75512d)
}

var fileDescriptor_446ed4cf1b75512d = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x29, 0x4a, 0x4c,
	0x2b, 0x89, 0x2f, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x4e, 0x4b, 0x29, 0x92, 0xe2, 0x29, 0xc8, 0x49, 0xac, 0x4c, 0x2d, 0x82, 0x08, 0x29, 0x25,
	0x72, 0x09, 0xb9, 0x80, 0x54, 0x06, 0x80, 0x05, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0x64, 0xb8, 0x38, 0x21, 0xaa, 0xe2, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x10,
	0x02, 0x42, 0x52, 0x5c, 0x1c, 0x10, 0xd3, 0x33, 0x53, 0x24, 0x98, 0xc0, 0x92, 0x70, 0xbe, 0x90,
	0x20, 0x17, 0x7b, 0x69, 0x31, 0x44, 0x1f, 0x33, 0x58, 0x8a, 0x41, 0xc9, 0x8a, 0x4b, 0x18, 0xc5,
	0x8a, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x65, 0x2e, 0x36, 0x88, 0x91, 0x60, 0x0b, 0xb8,
	0x8d, 0xb8, 0xf5, 0xd2, 0x52, 0x8a, 0xf4, 0xa0, 0x8a, 0xa0, 0x52, 0x46, 0x81, 0x5c, 0xdc, 0x48,
	0x7a, 0x85, 0x9c, 0x50, 0xb9, 0xe2, 0x60, 0x2d, 0x98, 0xee, 0x97, 0x92, 0xc0, 0x94, 0x80, 0xd8,
	0xaa, 0xc4, 0xe0, 0x24, 0x17, 0x25, 0x93, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f,
	0xab, 0x5f, 0x92, 0x91, 0x5a, 0x92, 0x91, 0x98, 0xa7, 0x9f, 0x96, 0x52, 0x14, 0x0f, 0x0e, 0x91,
	0x24, 0x36, 0x30, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x91, 0x0a, 0x52, 0x42, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DraftPlayerClient is the client API for DraftPlayer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DraftPlayerClient interface {
	DraftPlayer(ctx context.Context, in *DraftPlayerRequest, opts ...grpc.CallOption) (*DraftPlayerResponse, error)
}

type draftPlayerClient struct {
	cc grpc.ClientConnInterface
}

func NewDraftPlayerClient(cc grpc.ClientConnInterface) DraftPlayerClient {
	return &draftPlayerClient{cc}
}

func (c *draftPlayerClient) DraftPlayer(ctx context.Context, in *DraftPlayerRequest, opts ...grpc.CallOption) (*DraftPlayerResponse, error) {
	out := new(DraftPlayerResponse)
	err := c.cc.Invoke(ctx, "/fdr.DraftPlayer/DraftPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DraftPlayerServer is the server API for DraftPlayer service.
type DraftPlayerServer interface {
	DraftPlayer(context.Context, *DraftPlayerRequest) (*DraftPlayerResponse, error)
}

// UnimplementedDraftPlayerServer can be embedded to have forward compatible implementations.
type UnimplementedDraftPlayerServer struct {
}

func (*UnimplementedDraftPlayerServer) DraftPlayer(ctx context.Context, req *DraftPlayerRequest) (*DraftPlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DraftPlayer not implemented")
}

func RegisterDraftPlayerServer(s *grpc.Server, srv DraftPlayerServer) {
	s.RegisterService(&_DraftPlayer_serviceDesc, srv)
}

func _DraftPlayer_DraftPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DraftPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftPlayerServer).DraftPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.DraftPlayer/DraftPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftPlayerServer).DraftPlayer(ctx, req.(*DraftPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DraftPlayer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdr.DraftPlayer",
	HandlerType: (*DraftPlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DraftPlayer",
			Handler:    _DraftPlayer_DraftPlayer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "draft_results.proto",
}
