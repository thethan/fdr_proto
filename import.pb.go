// Code generated by protoc-gen-go. DO NOT EDIT.
// source: import.proto

package fdr_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImportUserRequest struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportUserRequest) Reset()         { *m = ImportUserRequest{} }
func (m *ImportUserRequest) String() string { return proto.CompactTextString(m) }
func (*ImportUserRequest) ProtoMessage()    {}
func (*ImportUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95c01a9edd6a5e10, []int{0}
}

func (m *ImportUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportUserRequest.Unmarshal(m, b)
}
func (m *ImportUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportUserRequest.Marshal(b, m, deterministic)
}
func (m *ImportUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportUserRequest.Merge(m, src)
}
func (m *ImportUserRequest) XXX_Size() int {
	return xxx_messageInfo_ImportUserRequest.Size(m)
}
func (m *ImportUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportUserRequest proto.InternalMessageInfo

func (m *ImportUserRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type ImportUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportUserResponse) Reset()         { *m = ImportUserResponse{} }
func (m *ImportUserResponse) String() string { return proto.CompactTextString(m) }
func (*ImportUserResponse) ProtoMessage()    {}
func (*ImportUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95c01a9edd6a5e10, []int{1}
}

func (m *ImportUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportUserResponse.Unmarshal(m, b)
}
func (m *ImportUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportUserResponse.Marshal(b, m, deterministic)
}
func (m *ImportUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportUserResponse.Merge(m, src)
}
func (m *ImportUserResponse) XXX_Size() int {
	return xxx_messageInfo_ImportUserResponse.Size(m)
}
func (m *ImportUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportUserResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImportUserRequest)(nil), "fdr.ImportUserRequest")
	proto.RegisterType((*ImportUserResponse)(nil), "fdr.ImportUserResponse")
}

func init() {
	proto.RegisterFile("import.proto", fileDescriptor_95c01a9edd6a5e10)
}

var fileDescriptor_95c01a9edd6a5e10 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0xcc, 0x2d, 0xc8,
	0x2f, 0x2a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x4b, 0x29, 0x92, 0xe2, 0x2e,
	0x2d, 0x4e, 0x2d, 0x2a, 0x86, 0x88, 0x28, 0x99, 0x72, 0x09, 0x7a, 0x82, 0x55, 0x84, 0x16, 0xa7,
	0x16, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x29, 0x70, 0xb1, 0x96, 0xe4, 0x67, 0xa7,
	0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x71, 0xe9, 0xa5, 0xa5, 0x14, 0xe9, 0x81, 0x45,
	0x82, 0x20, 0x12, 0x4a, 0x22, 0x5c, 0x42, 0xc8, 0xda, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x8d,
	0x02, 0xb8, 0xd8, 0x20, 0xa2, 0x42, 0x6e, 0xc8, 0xc6, 0xfa, 0xa4, 0x26, 0xa6, 0x97, 0xa6, 0x16,
	0x0b, 0x89, 0x81, 0xcd, 0xc1, 0xb0, 0x4e, 0x4a, 0x1c, 0x43, 0x1c, 0x62, 0x9e, 0x12, 0x83, 0x93,
	0x5c, 0x94, 0x4c, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x49, 0x46,
	0x6a, 0x49, 0x46, 0x62, 0x9e, 0x7e, 0x5a, 0x4a, 0x51, 0x3c, 0xd8, 0xf9, 0x49, 0x6c, 0x60, 0xca,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x59, 0xef, 0x08, 0xc0, 0xe7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ImportClient is the client API for Import service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImportClient interface {
	ImportUserLeagues(ctx context.Context, in *ImportUserRequest, opts ...grpc.CallOption) (*ImportUserResponse, error)
}

type importClient struct {
	cc grpc.ClientConnInterface
}

func NewImportClient(cc grpc.ClientConnInterface) ImportClient {
	return &importClient{cc}
}

func (c *importClient) ImportUserLeagues(ctx context.Context, in *ImportUserRequest, opts ...grpc.CallOption) (*ImportUserResponse, error) {
	out := new(ImportUserResponse)
	err := c.cc.Invoke(ctx, "/fdr.Import/ImportUserLeagues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImportServer is the server API for Import service.
type ImportServer interface {
	ImportUserLeagues(context.Context, *ImportUserRequest) (*ImportUserResponse, error)
}

// UnimplementedImportServer can be embedded to have forward compatible implementations.
type UnimplementedImportServer struct {
}

func (*UnimplementedImportServer) ImportUserLeagues(ctx context.Context, req *ImportUserRequest) (*ImportUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportUserLeagues not implemented")
}

func RegisterImportServer(s *grpc.Server, srv ImportServer) {
	s.RegisterService(&_Import_serviceDesc, srv)
}

func _Import_ImportUserLeagues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImportServer).ImportUserLeagues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.Import/ImportUserLeagues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImportServer).ImportUserLeagues(ctx, req.(*ImportUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Import_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdr.Import",
	HandlerType: (*ImportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportUserLeagues",
			Handler:    _Import_ImportUserLeagues_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "import.proto",
}
