// Code generated by protoc-gen-go. DO NOT EDIT.
// source: draft.proto

// The package name determines the name of the directories that truss creates
// for `package echo;` truss will create the directory "echo-service".

package fdr_proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type League int32

const (
	League_League_ALL League = 0
	League_League_NFL League = 1
	League_League_MLB League = 2
	League_League_NBA League = 3
	League_League_NHL League = 4
	League_League_MLS League = 5
)

var League_name = map[int32]string{
	0: "League_ALL",
	1: "League_NFL",
	2: "League_MLB",
	3: "League_NBA",
	4: "League_NHL",
	5: "League_MLS",
}

var League_value = map[string]int32{
	"League_ALL": 0,
	"League_NFL": 1,
	"League_MLB": 2,
	"League_NBA": 3,
	"League_NHL": 4,
	"League_MLS": 5,
}

func (x League) String() string {
	return proto.EnumName(League_name, int32(x))
}

func (League) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{0}
}

type DraftType int32

const (
	DraftType_DraftType_Snake       DraftType = 0
	DraftType_DraftType_Traditional DraftType = 1
)

var DraftType_name = map[int32]string{
	0: "DraftType_Snake",
	1: "DraftType_Traditional",
}

var DraftType_value = map[string]int32{
	"DraftType_Snake":       0,
	"DraftType_Traditional": 1,
}

func (x DraftType) String() string {
	return proto.EnumName(DraftType_name, int32(x))
}

func (DraftType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{1}
}

type ExternalIdentifiers_ExternalResources int32

const (
	ExternalIdentifiers_Unspecified ExternalIdentifiers_ExternalResources = 0
	ExternalIdentifiers_Yahoo       ExternalIdentifiers_ExternalResources = 1
)

var ExternalIdentifiers_ExternalResources_name = map[int32]string{
	0: "Unspecified",
	1: "Yahoo",
}

var ExternalIdentifiers_ExternalResources_value = map[string]int32{
	"Unspecified": 0,
	"Yahoo":       1,
}

func (x ExternalIdentifiers_ExternalResources) String() string {
	return proto.EnumName(ExternalIdentifiers_ExternalResources_name, int32(x))
}

func (ExternalIdentifiers_ExternalResources) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{1, 0}
}

type Season struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	League               League               `protobuf:"varint,3,opt,name=league,proto3,enum=fdr.League" json:"league,omitempty"`
	DraftType            DraftType            `protobuf:"varint,4,opt,name=draft_type,proto3,enum=fdr.DraftType" json:"draft_type,omitempty"`
	DraftTime            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=draftTime,json=draft_time,proto3" json:"draftTime,omitempty"`
	Users                []*User              `protobuf:"bytes,6,rep,name=users,proto3" json:"users,omitempty"`
	Commissioners        []*User              `protobuf:"bytes,7,rep,name=commissioners,proto3" json:"commissioners,omitempty"`
	Roster               []*RosterRules       `protobuf:"bytes,8,rep,name=roster,proto3" json:"roster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Season) Reset()         { *m = Season{} }
func (m *Season) String() string { return proto.CompactTextString(m) }
func (*Season) ProtoMessage()    {}
func (*Season) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{0}
}

func (m *Season) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Season.Unmarshal(m, b)
}
func (m *Season) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Season.Marshal(b, m, deterministic)
}
func (m *Season) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Season.Merge(m, src)
}
func (m *Season) XXX_Size() int {
	return xxx_messageInfo_Season.Size(m)
}
func (m *Season) XXX_DiscardUnknown() {
	xxx_messageInfo_Season.DiscardUnknown(m)
}

var xxx_messageInfo_Season proto.InternalMessageInfo

func (m *Season) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Season) GetLeague() League {
	if m != nil {
		return m.League
	}
	return League_League_ALL
}

func (m *Season) GetDraftType() DraftType {
	if m != nil {
		return m.DraftType
	}
	return DraftType_DraftType_Snake
}

func (m *Season) GetDraftTime() *timestamp.Timestamp {
	if m != nil {
		return m.DraftTime
	}
	return nil
}

func (m *Season) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Season) GetCommissioners() []*User {
	if m != nil {
		return m.Commissioners
	}
	return nil
}

func (m *Season) GetRoster() []*RosterRules {
	if m != nil {
		return m.Roster
	}
	return nil
}

type ExternalIdentifiers struct {
	YearsActive          []int32                               `protobuf:"varint,1,rep,packed,name=years_active,json=yearsActive,proto3" json:"years_active,omitempty"`
	ExternalSource       ExternalIdentifiers_ExternalResources `protobuf:"varint,2,opt,name=external_source,json=externalSource,proto3,enum=fdr.ExternalIdentifiers_ExternalResources" json:"external_source,omitempty"`
	ExternalId           string                                `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ExternalIdentifiers) Reset()         { *m = ExternalIdentifiers{} }
func (m *ExternalIdentifiers) String() string { return proto.CompactTextString(m) }
func (*ExternalIdentifiers) ProtoMessage()    {}
func (*ExternalIdentifiers) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{1}
}

func (m *ExternalIdentifiers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalIdentifiers.Unmarshal(m, b)
}
func (m *ExternalIdentifiers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalIdentifiers.Marshal(b, m, deterministic)
}
func (m *ExternalIdentifiers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalIdentifiers.Merge(m, src)
}
func (m *ExternalIdentifiers) XXX_Size() int {
	return xxx_messageInfo_ExternalIdentifiers.Size(m)
}
func (m *ExternalIdentifiers) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalIdentifiers.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalIdentifiers proto.InternalMessageInfo

func (m *ExternalIdentifiers) GetYearsActive() []int32 {
	if m != nil {
		return m.YearsActive
	}
	return nil
}

func (m *ExternalIdentifiers) GetExternalSource() ExternalIdentifiers_ExternalResources {
	if m != nil {
		return m.ExternalSource
	}
	return ExternalIdentifiers_Unspecified
}

func (m *ExternalIdentifiers) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

type CreateDraftRequest struct {
	Season               *Season  `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDraftRequest) Reset()         { *m = CreateDraftRequest{} }
func (m *CreateDraftRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDraftRequest) ProtoMessage()    {}
func (*CreateDraftRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{2}
}

func (m *CreateDraftRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDraftRequest.Unmarshal(m, b)
}
func (m *CreateDraftRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDraftRequest.Marshal(b, m, deterministic)
}
func (m *CreateDraftRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDraftRequest.Merge(m, src)
}
func (m *CreateDraftRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDraftRequest.Size(m)
}
func (m *CreateDraftRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDraftRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDraftRequest proto.InternalMessageInfo

func (m *CreateDraftRequest) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

type CreateDraftResponse struct {
	Season               *Season  `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDraftResponse) Reset()         { *m = CreateDraftResponse{} }
func (m *CreateDraftResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDraftResponse) ProtoMessage()    {}
func (*CreateDraftResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{3}
}

func (m *CreateDraftResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDraftResponse.Unmarshal(m, b)
}
func (m *CreateDraftResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDraftResponse.Marshal(b, m, deterministic)
}
func (m *CreateDraftResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDraftResponse.Merge(m, src)
}
func (m *CreateDraftResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDraftResponse.Size(m)
}
func (m *CreateDraftResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDraftResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDraftResponse proto.InternalMessageInfo

func (m *CreateDraftResponse) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

type GetPlayersBySeasonRequest struct {
	Season               *Season          `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	PlayerPositions      []PlayerPosition `protobuf:"varint,2,rep,packed,name=player_positions,json=playerPositions,proto3,enum=fdr.PlayerPosition" json:"player_positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetPlayersBySeasonRequest) Reset()         { *m = GetPlayersBySeasonRequest{} }
func (m *GetPlayersBySeasonRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlayersBySeasonRequest) ProtoMessage()    {}
func (*GetPlayersBySeasonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{4}
}

func (m *GetPlayersBySeasonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayersBySeasonRequest.Unmarshal(m, b)
}
func (m *GetPlayersBySeasonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayersBySeasonRequest.Marshal(b, m, deterministic)
}
func (m *GetPlayersBySeasonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayersBySeasonRequest.Merge(m, src)
}
func (m *GetPlayersBySeasonRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlayersBySeasonRequest.Size(m)
}
func (m *GetPlayersBySeasonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayersBySeasonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayersBySeasonRequest proto.InternalMessageInfo

func (m *GetPlayersBySeasonRequest) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *GetPlayersBySeasonRequest) GetPlayerPositions() []PlayerPosition {
	if m != nil {
		return m.PlayerPositions
	}
	return nil
}

type GetPlayersBySeasonResponse struct {
	Season               *Season   `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	Players              []*Player `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetPlayersBySeasonResponse) Reset()         { *m = GetPlayersBySeasonResponse{} }
func (m *GetPlayersBySeasonResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlayersBySeasonResponse) ProtoMessage()    {}
func (*GetPlayersBySeasonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{5}
}

func (m *GetPlayersBySeasonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayersBySeasonResponse.Unmarshal(m, b)
}
func (m *GetPlayersBySeasonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayersBySeasonResponse.Marshal(b, m, deterministic)
}
func (m *GetPlayersBySeasonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayersBySeasonResponse.Merge(m, src)
}
func (m *GetPlayersBySeasonResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlayersBySeasonResponse.Size(m)
}
func (m *GetPlayersBySeasonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayersBySeasonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayersBySeasonResponse proto.InternalMessageInfo

func (m *GetPlayersBySeasonResponse) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *GetPlayersBySeasonResponse) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type GetPlayersBySeasonAndUserRequest struct {
	Season               *Season          `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	PlayerPositions      []PlayerPosition `protobuf:"varint,2,rep,packed,name=player_positions,json=playerPositions,proto3,enum=fdr.PlayerPosition" json:"player_positions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetPlayersBySeasonAndUserRequest) Reset()         { *m = GetPlayersBySeasonAndUserRequest{} }
func (m *GetPlayersBySeasonAndUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlayersBySeasonAndUserRequest) ProtoMessage()    {}
func (*GetPlayersBySeasonAndUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{6}
}

func (m *GetPlayersBySeasonAndUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayersBySeasonAndUserRequest.Unmarshal(m, b)
}
func (m *GetPlayersBySeasonAndUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayersBySeasonAndUserRequest.Marshal(b, m, deterministic)
}
func (m *GetPlayersBySeasonAndUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayersBySeasonAndUserRequest.Merge(m, src)
}
func (m *GetPlayersBySeasonAndUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlayersBySeasonAndUserRequest.Size(m)
}
func (m *GetPlayersBySeasonAndUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayersBySeasonAndUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayersBySeasonAndUserRequest proto.InternalMessageInfo

func (m *GetPlayersBySeasonAndUserRequest) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *GetPlayersBySeasonAndUserRequest) GetPlayerPositions() []PlayerPosition {
	if m != nil {
		return m.PlayerPositions
	}
	return nil
}

type GetPlayersBySeasonAndUserResponse struct {
	Season               *Season   `protobuf:"bytes,1,opt,name=season,proto3" json:"season,omitempty"`
	User                 *User     `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Players              []*Player `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetPlayersBySeasonAndUserResponse) Reset()         { *m = GetPlayersBySeasonAndUserResponse{} }
func (m *GetPlayersBySeasonAndUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetPlayersBySeasonAndUserResponse) ProtoMessage()    {}
func (*GetPlayersBySeasonAndUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{7}
}

func (m *GetPlayersBySeasonAndUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayersBySeasonAndUserResponse.Unmarshal(m, b)
}
func (m *GetPlayersBySeasonAndUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayersBySeasonAndUserResponse.Marshal(b, m, deterministic)
}
func (m *GetPlayersBySeasonAndUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayersBySeasonAndUserResponse.Merge(m, src)
}
func (m *GetPlayersBySeasonAndUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetPlayersBySeasonAndUserResponse.Size(m)
}
func (m *GetPlayersBySeasonAndUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayersBySeasonAndUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayersBySeasonAndUserResponse proto.InternalMessageInfo

func (m *GetPlayersBySeasonAndUserResponse) GetSeason() *Season {
	if m != nil {
		return m.Season
	}
	return nil
}

func (m *GetPlayersBySeasonAndUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetPlayersBySeasonAndUserResponse) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type ImportPlayerRequest struct {
	Player               *Player           `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Ranking              map[string]int32  `protobuf:"bytes,2,rep,name=ranking,proto3" json:"ranking,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ServiceIdentifiers   map[string]string `protobuf:"bytes,3,rep,name=service_identifiers,json=serviceIdentifiers,proto3" json:"service_identifiers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImportPlayerRequest) Reset()         { *m = ImportPlayerRequest{} }
func (m *ImportPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*ImportPlayerRequest) ProtoMessage()    {}
func (*ImportPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{8}
}

func (m *ImportPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportPlayerRequest.Unmarshal(m, b)
}
func (m *ImportPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportPlayerRequest.Marshal(b, m, deterministic)
}
func (m *ImportPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportPlayerRequest.Merge(m, src)
}
func (m *ImportPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_ImportPlayerRequest.Size(m)
}
func (m *ImportPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportPlayerRequest proto.InternalMessageInfo

func (m *ImportPlayerRequest) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func (m *ImportPlayerRequest) GetRanking() map[string]int32 {
	if m != nil {
		return m.Ranking
	}
	return nil
}

func (m *ImportPlayerRequest) GetServiceIdentifiers() map[string]string {
	if m != nil {
		return m.ServiceIdentifiers
	}
	return nil
}

type ImportPlayerResponse struct {
	Player               *Player  `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportPlayerResponse) Reset()         { *m = ImportPlayerResponse{} }
func (m *ImportPlayerResponse) String() string { return proto.CompactTextString(m) }
func (*ImportPlayerResponse) ProtoMessage()    {}
func (*ImportPlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ce8e2d0f641c7ec, []int{9}
}

func (m *ImportPlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportPlayerResponse.Unmarshal(m, b)
}
func (m *ImportPlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportPlayerResponse.Marshal(b, m, deterministic)
}
func (m *ImportPlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportPlayerResponse.Merge(m, src)
}
func (m *ImportPlayerResponse) XXX_Size() int {
	return xxx_messageInfo_ImportPlayerResponse.Size(m)
}
func (m *ImportPlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportPlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportPlayerResponse proto.InternalMessageInfo

func (m *ImportPlayerResponse) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

func init() {
	proto.RegisterEnum("fdr.League", League_name, League_value)
	proto.RegisterEnum("fdr.DraftType", DraftType_name, DraftType_value)
	proto.RegisterEnum("fdr.ExternalIdentifiers_ExternalResources", ExternalIdentifiers_ExternalResources_name, ExternalIdentifiers_ExternalResources_value)
	proto.RegisterType((*Season)(nil), "fdr.Season")
	proto.RegisterType((*ExternalIdentifiers)(nil), "fdr.ExternalIdentifiers")
	proto.RegisterType((*CreateDraftRequest)(nil), "fdr.CreateDraftRequest")
	proto.RegisterType((*CreateDraftResponse)(nil), "fdr.CreateDraftResponse")
	proto.RegisterType((*GetPlayersBySeasonRequest)(nil), "fdr.GetPlayersBySeasonRequest")
	proto.RegisterType((*GetPlayersBySeasonResponse)(nil), "fdr.GetPlayersBySeasonResponse")
	proto.RegisterType((*GetPlayersBySeasonAndUserRequest)(nil), "fdr.GetPlayersBySeasonAndUserRequest")
	proto.RegisterType((*GetPlayersBySeasonAndUserResponse)(nil), "fdr.GetPlayersBySeasonAndUserResponse")
	proto.RegisterType((*ImportPlayerRequest)(nil), "fdr.ImportPlayerRequest")
	proto.RegisterMapType((map[string]int32)(nil), "fdr.ImportPlayerRequest.RankingEntry")
	proto.RegisterMapType((map[string]string)(nil), "fdr.ImportPlayerRequest.ServiceIdentifiersEntry")
	proto.RegisterType((*ImportPlayerResponse)(nil), "fdr.ImportPlayerResponse")
}

func init() {
	proto.RegisterFile("draft.proto", fileDescriptor_5ce8e2d0f641c7ec)
}

var fileDescriptor_5ce8e2d0f641c7ec = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xc1, 0x6e, 0x22, 0x47,
	0x13, 0x66, 0xc0, 0xe0, 0x9f, 0x1a, 0x16, 0xcf, 0x36, 0xfb, 0xc7, 0xe3, 0x51, 0xb2, 0x66, 0x67,
	0xe5, 0x08, 0xf9, 0x00, 0x11, 0x39, 0x24, 0xeb, 0x95, 0x12, 0x41, 0xd6, 0xc9, 0x5a, 0x22, 0x91,
	0x35, 0xe0, 0x43, 0x56, 0x91, 0x50, 0x2f, 0x53, 0x40, 0xcb, 0x30, 0x3d, 0xe9, 0x6e, 0xac, 0x70,
	0xcb, 0x2d, 0xb7, 0x3c, 0x45, 0x1e, 0x26, 0x6f, 0x11, 0xe5, 0x90, 0xf7, 0x88, 0xe8, 0x9e, 0xc1,
	0xc3, 0x62, 0xd6, 0xb1, 0x22, 0xe5, 0x64, 0xaa, 0xbe, 0xaf, 0xbe, 0xea, 0xaa, 0xae, 0xae, 0x31,
	0xd8, 0xa1, 0xa0, 0x63, 0xd5, 0x8c, 0x05, 0x57, 0x9c, 0x14, 0xc6, 0xa1, 0xf0, 0x8e, 0x27, 0x9c,
	0x4f, 0x66, 0xd8, 0xd2, 0xae, 0xb7, 0x8b, 0x71, 0x4b, 0xb1, 0x39, 0x4a, 0x45, 0xe7, 0xb1, 0x61,
	0x79, 0x95, 0x78, 0x46, 0x97, 0x28, 0x12, 0xeb, 0x03, 0x63, 0x0d, 0x63, 0x2e, 0x99, 0x62, 0x3c,
	0x92, 0x89, 0xdf, 0x5e, 0x48, 0x14, 0xa9, 0x51, 0x11, 0x5c, 0xaa, 0x34, 0xc4, 0xff, 0x2d, 0x0f,
	0xa5, 0x3e, 0x52, 0xc9, 0x23, 0x52, 0x85, 0xfc, 0xc5, 0x2b, 0xd7, 0xaa, 0x5b, 0x8d, 0x72, 0x90,
	0x67, 0x21, 0x79, 0x0e, 0xa5, 0x19, 0xd2, 0xc9, 0x02, 0xdd, 0x42, 0xdd, 0x6a, 0x54, 0xdb, 0x76,
	0x73, 0x1c, 0x8a, 0x66, 0x4f, 0xbb, 0x82, 0x04, 0x22, 0x4d, 0x00, 0x7d, 0xea, 0xa1, 0x5a, 0xc6,
	0xe8, 0xee, 0x69, 0x62, 0x55, 0x13, 0x5f, 0xad, 0xdc, 0x83, 0x65, 0x8c, 0x41, 0x86, 0x41, 0x5e,
	0x40, 0x59, 0x5b, 0x03, 0x36, 0x47, 0xb7, 0x58, 0xb7, 0x1a, 0x76, 0xdb, 0x6b, 0x9a, 0x2a, 0x9b,
	0x69, 0x95, 0xcd, 0x41, 0x5a, 0xe5, 0x3a, 0x94, 0xcd, 0x91, 0x1c, 0x43, 0x51, 0xd7, 0xe1, 0x96,
	0xea, 0x85, 0x86, 0xdd, 0x2e, 0xeb, 0x2c, 0x57, 0x12, 0x45, 0x60, 0xfc, 0xa4, 0x05, 0x8f, 0x46,
	0x7c, 0x3e, 0x67, 0x52, 0x32, 0x1e, 0xad, 0x88, 0xfb, 0xef, 0x12, 0x37, 0x71, 0xd2, 0x80, 0x92,
	0x69, 0x86, 0xfb, 0x3f, 0xcd, 0x74, 0x34, 0x33, 0xd0, 0xae, 0x60, 0x31, 0x43, 0x19, 0x24, 0xb8,
	0xff, 0x87, 0x05, 0xb5, 0xf3, 0x9f, 0x14, 0x8a, 0x88, 0xce, 0x2e, 0x42, 0x8c, 0x14, 0x1b, 0xb3,
	0x95, 0xc2, 0x33, 0xa8, 0x2c, 0x91, 0x0a, 0x39, 0xa4, 0x23, 0xc5, 0x6e, 0xd0, 0xb5, 0xea, 0x85,
	0x46, 0x31, 0xb0, 0xb5, 0xaf, 0xa3, 0x5d, 0xa4, 0x0f, 0x07, 0x98, 0x44, 0x0e, 0x25, 0x5f, 0x88,
	0x11, 0xba, 0x79, 0xdd, 0xa6, 0x53, 0x9d, 0xed, 0x0e, 0xd5, 0xb5, 0x2f, 0x40, 0x13, 0x20, 0x83,
	0x6a, 0x2a, 0xd1, 0xd7, 0x0e, 0x72, 0x0c, 0xf6, 0x5a, 0x94, 0x85, 0xfa, 0x82, 0xca, 0x01, 0xe0,
	0x5a, 0xcb, 0x6f, 0xc1, 0xe3, 0x2d, 0x15, 0x72, 0x00, 0xf6, 0x55, 0x24, 0x63, 0x1c, 0xad, 0xf2,
	0x84, 0x4e, 0x8e, 0x94, 0xa1, 0xf8, 0x3d, 0x9d, 0x72, 0xee, 0x58, 0xfe, 0x0b, 0x20, 0x5f, 0x09,
	0xa4, 0x0a, 0xf5, 0xbd, 0x05, 0xf8, 0xe3, 0x02, 0xa5, 0x5a, 0xcd, 0x80, 0xd4, 0xd3, 0xa1, 0xe7,
	0xc2, 0x4e, 0x66, 0xc0, 0x0c, 0x4c, 0x90, 0x40, 0xfe, 0x19, 0xd4, 0x36, 0x42, 0x65, 0xcc, 0x23,
	0x89, 0xff, 0x2c, 0xf6, 0x67, 0x0b, 0x8e, 0xbe, 0x41, 0x75, 0xa9, 0x07, 0x57, 0x76, 0x97, 0x09,
	0xfc, 0x80, 0xf4, 0xe4, 0x0b, 0x70, 0xde, 0x9d, 0x7b, 0x37, 0x5f, 0x2f, 0x34, 0xaa, 0xed, 0x9a,
	0xa6, 0x1b, 0xed, 0xcb, 0x04, 0x0b, 0x0e, 0xe2, 0x0d, 0x5b, 0xfa, 0x53, 0xf0, 0xee, 0x3a, 0xc1,
	0x03, 0xaa, 0x20, 0x27, 0xb0, 0x6f, 0x54, 0x4d, 0xe6, 0x94, 0x65, 0x34, 0x83, 0x14, 0xf3, 0x7f,
	0xb1, 0xa0, 0xbe, 0x9d, 0xaa, 0x13, 0x85, 0x7a, 0x38, 0xff, 0xcb, 0x9a, 0x7f, 0xb5, 0xe0, 0xd9,
	0x7b, 0x4e, 0xf2, 0x90, 0xda, 0x3f, 0x82, 0xbd, 0xd5, 0xf3, 0xd3, 0x43, 0xbd, 0xf1, 0xd8, 0xb4,
	0x3b, 0xdb, 0x9a, 0xc2, 0x7b, 0x5a, 0xf3, 0x67, 0x1e, 0x6a, 0x17, 0xf3, 0x98, 0x8b, 0xe4, 0x4c,
	0x99, 0x6e, 0x18, 0xca, 0xc6, 0x11, 0x12, 0x4e, 0x02, 0x91, 0x2f, 0x61, 0x5f, 0xd0, 0xe8, 0x9a,
	0x45, 0x93, 0xa4, 0xfd, 0x27, 0x9a, 0x75, 0x87, 0x5e, 0x33, 0x30, 0xbc, 0xf3, 0x48, 0x89, 0x65,
	0x90, 0x46, 0x11, 0x0a, 0x35, 0x89, 0xe2, 0x86, 0x8d, 0x70, 0xc8, 0x6e, 0xdf, 0x61, 0x72, 0xe0,
	0x4f, 0x76, 0x8a, 0xf5, 0x4d, 0x4c, 0xe6, 0xe9, 0x1a, 0x5d, 0x22, 0xb7, 0x00, 0xef, 0x0c, 0x2a,
	0xd9, 0xdc, 0xc4, 0x81, 0xc2, 0x35, 0x2e, 0x93, 0x75, 0xbb, 0xfa, 0x49, 0x9e, 0x40, 0xf1, 0x86,
	0xce, 0x16, 0x66, 0x3d, 0x14, 0x03, 0x63, 0x9c, 0xe5, 0x3f, 0xb7, 0xbc, 0x73, 0x38, 0xdc, 0x91,
	0xea, 0x3e, 0x99, 0x72, 0x46, 0xc6, 0x7f, 0x09, 0x4f, 0x36, 0xab, 0xb8, 0xbd, 0xe6, 0x7b, 0x7b,
	0x7c, 0x3a, 0x85, 0x92, 0x59, 0xfd, 0xa4, 0x0a, 0x60, 0x7e, 0x0d, 0x3b, 0xbd, 0x9e, 0x93, 0xcb,
	0xd8, 0xdf, 0x7d, 0xdd, 0x73, 0xac, 0x8c, 0xfd, 0x6d, 0xaf, 0xeb, 0xe4, 0xb3, 0x78, 0xb7, 0xe3,
	0x14, 0xb2, 0xf6, 0xeb, 0x9e, 0xb3, 0xb7, 0xc1, 0xef, 0x3b, 0xc5, 0xd3, 0x97, 0x50, 0x5e, 0x7f,
	0x3b, 0x48, 0x0d, 0x0e, 0xd6, 0xc6, 0xb0, 0x1f, 0xd1, 0x6b, 0x74, 0x72, 0xe4, 0x08, 0xfe, 0x7f,
	0xeb, 0x1c, 0x08, 0x1a, 0xea, 0xa9, 0xa6, 0x33, 0xc7, 0x6a, 0xff, 0x6e, 0x41, 0x51, 0x63, 0xa4,
	0x0b, 0x76, 0x66, 0x2b, 0x91, 0x43, 0x5d, 0xd4, 0xf6, 0x8a, 0xf3, 0xdc, 0x6d, 0xc0, 0xf4, 0xc5,
	0xcf, 0x91, 0xcf, 0xe0, 0xa8, 0xc7, 0xa4, 0xd2, 0x6e, 0xb9, 0x1a, 0xea, 0xd7, 0x54, 0x76, 0x46,
	0x23, 0x94, 0x72, 0xc0, 0x49, 0xf6, 0x35, 0x78, 0x59, 0xc3, 0xcf, 0xad, 0x92, 0x5f, 0xc5, 0xe1,
	0xbf, 0x4a, 0xde, 0xfe, 0xcb, 0x82, 0x47, 0xe6, 0x12, 0x92, 0xcb, 0x27, 0x3f, 0xc0, 0xe1, 0xed,
	0xa3, 0x1d, 0x30, 0x0c, 0x07, 0xbc, 0x93, 0x7c, 0xbc, 0x9f, 0x6a, 0xa1, 0x9d, 0x9b, 0xd4, 0x3b,
	0xde, 0x89, 0xaf, 0x8b, 0xbd, 0x81, 0xe7, 0x3b, 0x57, 0xc2, 0xa5, 0xc0, 0x31, 0x0a, 0x8c, 0x46,
	0x48, 0x4e, 0x76, 0x28, 0x6d, 0xae, 0x31, 0xef, 0xe3, 0xfb, 0x68, 0xeb, 0x3a, 0xdf, 0xc0, 0x63,
	0x33, 0x96, 0xba, 0x01, 0x86, 0x4e, 0xce, 0xa1, 0x92, 0x9d, 0x55, 0xe2, 0xee, 0x7a, 0x84, 0xde,
	0xd1, 0x1d, 0x48, 0xaa, 0xdd, 0x7d, 0xfa, 0xe6, 0xc3, 0x09, 0x53, 0xd3, 0xc5, 0xdb, 0xe6, 0x88,
	0xcf, 0x5b, 0x6a, 0x8a, 0x6a, 0x4a, 0xa3, 0xd6, 0x38, 0x14, 0x43, 0xf3, 0xcf, 0x46, 0x49, 0xff,
	0xf9, 0xf4, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0xda, 0xc4, 0x58, 0x7b, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DraftClient is the client API for Draft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DraftClient interface {
	CreateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*CreateDraftResponse, error)
	ListDraftsUserHasAccessTo(ctx context.Context, in *Season, opts ...grpc.CallOption) (*Season, error)
	UpdateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*CreateDraftResponse, error)
}

type draftClient struct {
	cc grpc.ClientConnInterface
}

func NewDraftClient(cc grpc.ClientConnInterface) DraftClient {
	return &draftClient{cc}
}

func (c *draftClient) CreateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*CreateDraftResponse, error) {
	out := new(CreateDraftResponse)
	err := c.cc.Invoke(ctx, "/fdr.Draft/CreateDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftClient) ListDraftsUserHasAccessTo(ctx context.Context, in *Season, opts ...grpc.CallOption) (*Season, error) {
	out := new(Season)
	err := c.cc.Invoke(ctx, "/fdr.Draft/ListDraftsUserHasAccessTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *draftClient) UpdateDraft(ctx context.Context, in *CreateDraftRequest, opts ...grpc.CallOption) (*CreateDraftResponse, error) {
	out := new(CreateDraftResponse)
	err := c.cc.Invoke(ctx, "/fdr.Draft/UpdateDraft", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DraftServer is the server API for Draft service.
type DraftServer interface {
	CreateDraft(context.Context, *CreateDraftRequest) (*CreateDraftResponse, error)
	ListDraftsUserHasAccessTo(context.Context, *Season) (*Season, error)
	UpdateDraft(context.Context, *CreateDraftRequest) (*CreateDraftResponse, error)
}

// UnimplementedDraftServer can be embedded to have forward compatible implementations.
type UnimplementedDraftServer struct {
}

func (*UnimplementedDraftServer) CreateDraft(ctx context.Context, req *CreateDraftRequest) (*CreateDraftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDraft not implemented")
}
func (*UnimplementedDraftServer) ListDraftsUserHasAccessTo(ctx context.Context, req *Season) (*Season, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDraftsUserHasAccessTo not implemented")
}
func (*UnimplementedDraftServer) UpdateDraft(ctx context.Context, req *CreateDraftRequest) (*CreateDraftResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDraft not implemented")
}

func RegisterDraftServer(s *grpc.Server, srv DraftServer) {
	s.RegisterService(&_Draft_serviceDesc, srv)
}

func _Draft_CreateDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServer).CreateDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.Draft/CreateDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServer).CreateDraft(ctx, req.(*CreateDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Draft_ListDraftsUserHasAccessTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Season)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServer).ListDraftsUserHasAccessTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.Draft/ListDraftsUserHasAccessTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServer).ListDraftsUserHasAccessTo(ctx, req.(*Season))
	}
	return interceptor(ctx, in, info, handler)
}

func _Draft_UpdateDraft_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDraftRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DraftServer).UpdateDraft(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.Draft/UpdateDraft",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DraftServer).UpdateDraft(ctx, req.(*CreateDraftRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Draft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdr.Draft",
	HandlerType: (*DraftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDraft",
			Handler:    _Draft_CreateDraft_Handler,
		},
		{
			MethodName: "ListDraftsUserHasAccessTo",
			Handler:    _Draft_ListDraftsUserHasAccessTo_Handler,
		},
		{
			MethodName: "UpdateDraft",
			Handler:    _Draft_UpdateDraft_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "draft.proto",
}

// PlayerServiceClient is the client API for PlayerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerServiceClient interface {
	GetPlayersTiedToASeason(ctx context.Context, in *GetPlayersBySeasonRequest, opts ...grpc.CallOption) (*GetPlayersBySeasonResponse, error)
	GetPlayersBySeasonAndUserPreference(ctx context.Context, in *GetPlayersBySeasonAndUserRequest, opts ...grpc.CallOption) (*GetPlayersBySeasonAndUserResponse, error)
}

type playerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayerServiceClient(cc grpc.ClientConnInterface) PlayerServiceClient {
	return &playerServiceClient{cc}
}

func (c *playerServiceClient) GetPlayersTiedToASeason(ctx context.Context, in *GetPlayersBySeasonRequest, opts ...grpc.CallOption) (*GetPlayersBySeasonResponse, error) {
	out := new(GetPlayersBySeasonResponse)
	err := c.cc.Invoke(ctx, "/fdr.PlayerService/GetPlayersTiedToASeason", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerServiceClient) GetPlayersBySeasonAndUserPreference(ctx context.Context, in *GetPlayersBySeasonAndUserRequest, opts ...grpc.CallOption) (*GetPlayersBySeasonAndUserResponse, error) {
	out := new(GetPlayersBySeasonAndUserResponse)
	err := c.cc.Invoke(ctx, "/fdr.PlayerService/GetPlayersBySeasonAndUserPreference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServiceServer is the server API for PlayerService service.
type PlayerServiceServer interface {
	GetPlayersTiedToASeason(context.Context, *GetPlayersBySeasonRequest) (*GetPlayersBySeasonResponse, error)
	GetPlayersBySeasonAndUserPreference(context.Context, *GetPlayersBySeasonAndUserRequest) (*GetPlayersBySeasonAndUserResponse, error)
}

// UnimplementedPlayerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerServiceServer struct {
}

func (*UnimplementedPlayerServiceServer) GetPlayersTiedToASeason(ctx context.Context, req *GetPlayersBySeasonRequest) (*GetPlayersBySeasonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayersTiedToASeason not implemented")
}
func (*UnimplementedPlayerServiceServer) GetPlayersBySeasonAndUserPreference(ctx context.Context, req *GetPlayersBySeasonAndUserRequest) (*GetPlayersBySeasonAndUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayersBySeasonAndUserPreference not implemented")
}

func RegisterPlayerServiceServer(s *grpc.Server, srv PlayerServiceServer) {
	s.RegisterService(&_PlayerService_serviceDesc, srv)
}

func _PlayerService_GetPlayersTiedToASeason_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlayersBySeasonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).GetPlayersTiedToASeason(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.PlayerService/GetPlayersTiedToASeason",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).GetPlayersTiedToASeason(ctx, req.(*GetPlayersBySeasonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayerService_GetPlayersBySeasonAndUserPreference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlayersBySeasonAndUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServiceServer).GetPlayersBySeasonAndUserPreference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.PlayerService/GetPlayersBySeasonAndUserPreference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServiceServer).GetPlayersBySeasonAndUserPreference(ctx, req.(*GetPlayersBySeasonAndUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdr.PlayerService",
	HandlerType: (*PlayerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlayersTiedToASeason",
			Handler:    _PlayerService_GetPlayersTiedToASeason_Handler,
		},
		{
			MethodName: "GetPlayersBySeasonAndUserPreference",
			Handler:    _PlayerService_GetPlayersBySeasonAndUserPreference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "draft.proto",
}

// ImportDraftPlayerClient is the client API for ImportDraftPlayer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImportDraftPlayerClient interface {
	ImportPlayer(ctx context.Context, in *ImportPlayerRequest, opts ...grpc.CallOption) (*ImportPlayerResponse, error)
}

type importDraftPlayerClient struct {
	cc grpc.ClientConnInterface
}

func NewImportDraftPlayerClient(cc grpc.ClientConnInterface) ImportDraftPlayerClient {
	return &importDraftPlayerClient{cc}
}

func (c *importDraftPlayerClient) ImportPlayer(ctx context.Context, in *ImportPlayerRequest, opts ...grpc.CallOption) (*ImportPlayerResponse, error) {
	out := new(ImportPlayerResponse)
	err := c.cc.Invoke(ctx, "/fdr.ImportDraftPlayer/ImportPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ImportDraftPlayerServer is the server API for ImportDraftPlayer service.
type ImportDraftPlayerServer interface {
	ImportPlayer(context.Context, *ImportPlayerRequest) (*ImportPlayerResponse, error)
}

// UnimplementedImportDraftPlayerServer can be embedded to have forward compatible implementations.
type UnimplementedImportDraftPlayerServer struct {
}

func (*UnimplementedImportDraftPlayerServer) ImportPlayer(ctx context.Context, req *ImportPlayerRequest) (*ImportPlayerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportPlayer not implemented")
}

func RegisterImportDraftPlayerServer(s *grpc.Server, srv ImportDraftPlayerServer) {
	s.RegisterService(&_ImportDraftPlayer_serviceDesc, srv)
}

func _ImportDraftPlayer_ImportPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ImportDraftPlayerServer).ImportPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fdr.ImportDraftPlayer/ImportPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ImportDraftPlayerServer).ImportPlayer(ctx, req.(*ImportPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ImportDraftPlayer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fdr.ImportDraftPlayer",
	HandlerType: (*ImportDraftPlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportPlayer",
			Handler:    _ImportDraftPlayer_ImportPlayer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "draft.proto",
}
